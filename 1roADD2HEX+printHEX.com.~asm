org 100h ; Seteaz? punctul de origine la 0x100. Într-un fi?ier .com, execu?ia începe la aceast? adres?.

; INCARCAM VALORILE

mov ax, 0050h ; AX = 0x0050. Ini?ial, nu ?tim con?inutul registrului AX, dar dup? aceast? instruc?iune, AX con?ine exact 80 (decimal).

mov bx, 00FFh ; BX = 0x00FF. Similar, aceasta pune valoarea 255 în BX. Înainte de aceast? instruc?iune, con?inutul lui BX nu era definit pentru program.
; Acum avem: AX = 0x0050 (80), BX = 0x00FF (255).

add ax, bx ; Efectueaz? AX = AX + BX. AX era 80, BX era 255, deci AX devine 335 în decimal, adic? 0x014F în hex. Dup? aceast? instruc?iune: AX = 0x014F.

; COD ADITIONAL PENTRU TRANSFORMARE REZULTAT (014Fh) ..in hex

; Nibble 1 (cel mai semnificativ)
push ax ; salveaz? AX pe stiv?, pentru c? dup? shr vrem s? restaur?m valoarea original? a lui AX.

shr ax, 12       ; deplasam 12 biti la dreapta
call print_hex_digit
pop ax

; Nibble 2
push ax
shr ax, 8 ; deplas?m con?inutul cu 8 bi?i. Acum nibble-ul care era în pozi?ia 11..8 se mut? la 3..0 (sfâr?itul lui AL).

and al, 0Fh ; masca 0x0F re?ine doar ultimii 4 bi?i, astfel ob?inem valoarea acelui nibble.

call print_hex_digit ; afi?eaz? nibble-ul.

pop ax ; reface valoarea lui ax

; Nibble 3
push ax
shr ax,4
and al,0Fh
call print_hex_digit
pop ax

; Nibble 4
and al,0Fh
call print_hex_digit

;CONTINUAM CU INTRERUPEREA (revenim la codul initial)
mov ah, 4Ch ; Seteaz? AH (partea superioar? a lui AX) la 0x4C. AX a fost modificat, dar acum ne intereseaz? doar AH, deoarece urm?toarea instruc?iune int 21h cite?te func?ia DOS din AH. AH=4Ch înseamn? "terminare program".

int 21h ; Aceasta apeleaz? întreruperea DOS 21h. DOS verific? AH ?i vede func?ia 4Ch, care înseamn? "Terminate Program". Programul se încheie ?i controlul revine la sistem.

; REVENIM LA CODUL ADITIONAL PENTRU AFISARE REZULTAT (subrutina print_hex_digit

;------------------------------------------------------------
; Subrutina: print_hex_digit
; Intrare: AL contine nibble-ul (0-15)
; Iesire: Afiseaza un caracter hex ('0'-'9','A'-'F')
;------------------------------------------------------------
print_hex_digit:
cmp al,10
jb digit_less_than_a
add al,'A'-10
jmp print_done

digit_less_than_a:
add al,'0'

print_done:
mov dl,al
mov ah,2
int 21h
ret




; [SOURCE]: C:\emu8086\MySource\1roADD2HEX+printHEX.asm
